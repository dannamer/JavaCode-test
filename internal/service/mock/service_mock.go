// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/dannamer/JavaCode-test/internal/model"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockRepoWallet is a mock of RepoWallet interface.
type MockRepoWallet struct {
	ctrl     *gomock.Controller
	recorder *MockRepoWalletMockRecorder
}

// MockRepoWalletMockRecorder is the mock recorder for MockRepoWallet.
type MockRepoWalletMockRecorder struct {
	mock *MockRepoWallet
}

// NewMockRepoWallet creates a new mock instance.
func NewMockRepoWallet(ctrl *gomock.Controller) *MockRepoWallet {
	mock := &MockRepoWallet{ctrl: ctrl}
	mock.recorder = &MockRepoWalletMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoWallet) EXPECT() *MockRepoWalletMockRecorder {
	return m.recorder
}

// GetWallet mocks base method.
func (m *MockRepoWallet) GetWallet(ctx context.Context, UUID uuid.UUID) (model.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWallet", ctx, UUID)
	ret0, _ := ret[0].(model.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWallet indicates an expected call of GetWallet.
func (mr *MockRepoWalletMockRecorder) GetWallet(ctx, UUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWallet", reflect.TypeOf((*MockRepoWallet)(nil).GetWallet), ctx, UUID)
}

// ProcessTransaction mocks base method.
func (m *MockRepoWallet) ProcessTransaction(ctx context.Context, wallet model.Wallet, transaction model.Transaction) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessTransaction", ctx, wallet, transaction)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessTransaction indicates an expected call of ProcessTransaction.
func (mr *MockRepoWalletMockRecorder) ProcessTransaction(ctx, wallet, transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessTransaction", reflect.TypeOf((*MockRepoWallet)(nil).ProcessTransaction), ctx, wallet, transaction)
}
